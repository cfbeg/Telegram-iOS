name: CI

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-15

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: '0'

      - name: Set active Xcode path
        run: |
          XCODE_VERSION=$(cat versions.json | python3 -c 'import json,sys;obj=json.load(sys.stdin);print(obj["xcode"]);')
          sudo xcode-select -s /Applications/Xcode_$XCODE_VERSION.app/Contents/Developer

      - name: Create canonical source directory
        run: |
          set -x
          sudo mkdir -p /Users/telegram
          sudo chown -R $(whoami) /Users/telegram
          cp -R $GITHUB_WORKSPACE /Users/telegram/
          mv /Users/telegram/$(basename $GITHUB_WORKSPACE) /Users/telegram/telegram-ios

      - name: Build the App
        run: |
          set -x

          mkdir -p $BUILD_WORKING_DIR
          cd $SOURCE_PATH

          BUILD_NUMBER_OFFSET="$(cat build_number_offset)"
          
          export APP_VERSION=$(cat versions.json | python3 -c 'import json,sys;obj=json.load(sys.stdin);print(obj["app"]);')
          export COMMIT_COUNT=$(git rev-list --count HEAD)
          export COMMIT_COUNT="$(($COMMIT_COUNT+$BUILD_NUMBER_OFFSET))"
          export BUILD_NUMBER="$COMMIT_COUNT"
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV

          # Build using fastlane (similar to master_build)
          cd $SOURCE_PATH/ci
          fastlane ci_build

          cd $SOURCE_PATH
          
          ARTIFACTS_PATH=$BUILD_WORKING_DIR/artifacts
          echo "ARTIFACTS_PATH=$ARTIFACTS_PATH" >> $GITHUB_ENV

          IPA_PATH=$ARTIFACTS_PATH/Telegram.ipa
          echo "IPA_PATH=$IPA_PATH" >> $GITHUB_ENV

          DSYMS_PATH=$ARTIFACTS_PATH/Telegram.DSYMs.zip
          echo "DSYMS_PATH=$DSYMS_PATH" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: build-${{ env.BUILD_NUMBER }}
          release_name: Telegram ${{ env.APP_VERSION }} (${{ env.BUILD_NUMBER }})
          body: |
            An unsigned build of Telegram for iOS ${{ env.APP_VERSION }} (${{ env.BUILD_NUMBER }})
          draft: false
          prerelease: false

      - name: Upload Release IPA
        id: upload-release-ipa 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.IPA_PATH }}
          asset_name: Telegram.ipa
          asset_content_type: application/zip

      - name: Upload Release DSYM
        id: upload-release-dsym 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.DSYMS_PATH }}
          asset_name: Telegram.DSYMs.zip
          asset_content_type: application/zip

    env:
      BAZEL_USER_ROOT: /private/var/tmp/_bazel_telegram
      BUILD_WORKING_DIR: /Users/telegram/build-working-dir
      SOURCE_PATH: /Users/telegram/telegram-ios
